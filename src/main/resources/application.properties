#运行环境
spring.profiles.active=dev
#jsp页面
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
#MySql数据库连接配置
spring.datasource.url=jdbc:mysql://localhost:3306/db3?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
mybatis.typeAliasesPackage=com.springboot.demo.model

#Oracle数据库连接配置
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:ORCL
#spring.datasource.username=wx01
#spring.datasource.password=123456
#mybatis.typeAliasesPackage=com.springboot.demo.model
#项目访问名称，如果不配置直接访问bean就可以
#server.servlet.context-path=/springBoot_demo

#静态文件访问配置
spring.mvc.static-path-pattern=/static/**


#运行环境
#spring.profiles.active=dev

#以下内容是配置resources->static和templates (导入jar包 ：
#            <groupId>org.springframework.boot</groupId>
#            <artifactId>spring-boot-starter-thymeleaf</artifactId>)

#server.port=9090
##视图层控制 用mvc方式访问templates下的HTML
#spring.mvc.view.prefix=classpath:/templates/
#spring.mvc.view.suffix=.html
#spring.mvc.static-path-pattern=/static/**

#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
##开发时关闭缓存,不然没法看到实时页面
#spring.thymeleaf.cache=false
##thymeleaf这样配置就可以直接访问static下的HTML(和mvc访问方式二选一)
#spring.thymeleaf.prefix = classpath:/static/
#spring.thymeleaf.suffix = .html

